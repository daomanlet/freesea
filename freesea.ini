[uwsgi]
module = freesea:app
# Start up in master mode and spawn five worker processes to serve actual requests:
master = true
http=:5000
processes = 5

# Although expose uWESGI on a network port, you’re going to be using
# Nginx to handle actual client connections, which will then pass 
# requests to uWSGI. Since these components are operating on the same 
# computer, a Unix socket is preferable because it is faster and more 
# secure. Let’s call the socket freesea.sock and place it in this directory.

Let’s also change the permissions on the socket. We’ll be giving the Nginx group ownership of the uWSGI process later on, so we need to make sure the group owner of the socket can read information from it and write to it. We will also clean up the socket when the process stops by adding the vacuum option:
socket = freesea.sock
chmod-socket = 660
vacuum = true

# Set the die-on-term option. This can help ensure that the 
# init system and uWSGI have the same assumptions about what 
# each process signal means. Setting this aligns the two 
# system components, implementing the expected behavior:

die-on-term = true
